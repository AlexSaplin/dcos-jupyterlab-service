{
  "id": "/dev/beakerx/notebook",
  "instances": 1,
  "cpus": 2,
  "mem": 8192,
  "user": "nobody",
  "cmd": "/usr/local/bin/start.sh ${CONDA_DIR}/bin/jupyter lab",
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "vishnumohan/beakerx-dcos:0.17.1-1.11.2",
      "parameters": [
        {
          "key": "user",
          "value": "nobody"
        }
      ],
      "forcePullImage": false
    }
  },
  "secrets": {
    "awsAccessKeyId": {
      "source": "dev/AWS_ACCESS_KEY_ID"
    },
    "awsSecretAccessKey": {
      "source": "dev/AWS_SECRET_ACCESS_KEY"
    },
    "serviceCredential": {
      "source": "dev/beakerx/serviceCredential"
    }
  },
  "env": {
    "AWS_ACCESS_KEY_ID": {
      "secret": "awsAccessKeyId"
    },
    "AWS_SECRET_ACCESS_KEY": {
      "secret": "awsSecretAccessKey"
    },
    "DCOS_SERVICE_ACCOUNT_CREDENTIAL": {
      "secret": "serviceCredential"
    },
    "AWS_REGION": "us-east-1",
    "S3_ENDPOINT": "s3.us-east-1.amazonaws.com",
    "S3_USE_HTTPS": "1",
    "S3_VERIFY_SSL": "1",
    "TERM": "xterm-256color"
  },
  "labels": {
    "MARATHON_SINGLE_INSTANCE_APP": "true",
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "vhost.example.com"
  },
  "portDefinitions": [
    {
      "port": 0,
      "protocol": "tcp",
      "name": "notebook",
      "labels": {
        "VIP_0": "/dev/beakerx/notebook:8888"
      }
    },
    {
      "port": 0,
      "protocol": "tcp",
      "name": "sparkdriver",
      "labels": {
        "VIP_1": "/dev/beakerx/sparkdriver:7077"
      }
    },
    {
      "port": 0,
      "protocol": "tcp",
      "name": "sparkui",
      "labels": {
        "VIP_2": "/dev/beakerx/sparkui:4040"
      }
    }
  ],
  "healthChecks": [
    {
      "portIndex": 0,
      "protocol": "MESOS_HTTP",
      "path": "/api",
      "gracePeriodSeconds": 30,
      "intervalSeconds": 20,
      "timeoutSeconds": 10,
      "maxConsecutiveFailures": 3
    }
  ],
  "upgradeStrategy": {
    "minimumHealthCapacity": 0,
    "maximumOverCapacity": 0
  },
  "unreachableStrategy": {
    "expungeAfterSeconds": 0,
    "inactiveAfterSeconds": 0
  }
}
